"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1422],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},l=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),l=p(t),f=o,m=l["".concat(c,".").concat(f)]||l[f]||u[f]||i;return t?r.createElement(m,s(s({ref:n},d),{},{components:t})):r.createElement(m,s({ref:n},d))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,s=new Array(i);s[0]=l;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var p=2;p<i;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}l.displayName="MDXCreateElement"},4645:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return d},default:function(){return l}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),s=["components"],a={sidebar_position:3,title:"Webhook provider",description:"How to use the webhook provider"},c="Webhook provider",p={unversionedId:"providers/webhook",id:"version-1.0.0/providers/webhook",title:"Webhook provider",description:"How to use the webhook provider",source:"@site/versioned_docs/version-1.0.0/providers/webhook.md",sourceDirName:"providers",slug:"/providers/webhook",permalink:"/docs/providers/webhook",tags:[],version:"1.0.0",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Webhook provider",description:"How to use the webhook provider"},sidebar:"tutorialSidebar",previous:{title:"Container provider",permalink:"/docs/providers/container"}},d=[{value:"Default configuration",id:"default-configuration",children:[],level:2},{value:"Webhook Api specification",id:"webhook-api-specification",children:[],level:2}],u={toc:d};function l(e){var n=e.components,t=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"webhook-provider"},"Webhook provider"),(0,i.kt)("p",null,"This provider allows to directly upload specifications to ",(0,i.kt)("em",{parentName:"p"},"UnisonUI")),(0,i.kt)("h2",{id:"default-configuration"},"Default configuration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-hocon"},'unisonui {\n  providers += "tech.unisonui.providers.WebhookProvider"\n\n  provider.webhook {\n    interface = "0.0.0.0" // Interface where the webhook server listen to.\n    port = 3000 // Port used by the webhook server\n    self-specification = no // Add the webhook specification to UnisonUI\n  }\n}\n')),(0,i.kt)("h2",{id:"webhook-api-specification"},"Webhook Api specification"),(0,i.kt)("p",null,"Here is the OpanAPI specification for the webhook API"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"openapi: 3.0.3\ninfo:\n  title: UnisonUI webhook\n  description: >\n    UnisonUI webhook is a service intends to give the ability to UnisonUI to add/remove services through webhook calls\n  license:\n    name: MIT\n    url: https://raw.githubusercontent.com/UnisonUI/unisonui/master/LICENSE\n  version: 1.0.0\npaths:\n  /services:\n    post:\n      summary: Create or update a service\n      requestBody:\n        description: Service to be inserted or update\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/OpenApi' \n                - $ref: '#/components/schemas/Grpc' \n      responses:\n        204:\n          description: Service successfully inserted or updated\n        500:\n          description: Something bad happened\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /services/{serviceName}:\n    delete:\n      summary: Delete a service\n      parameters:\n        - name: serviceName\n          in: path\n          description: Service's name to delete\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Service successfully deleted\n        500:\n          description: Something bad happened\n          content:\n            text/plain:\n              schema:\n                type: string\ncomponents:\n  schemas:\n    OpenApi:\n      type: object\n      required:\n        - name\n        - specification\n      properties:\n        name:\n          type: string\n          description: Service's name\n        specification:\n          type: string\n          description: Specification file data\n        metadata:\n          type: object\n          description: Optional metadata linked to the service\n    Grpc:\n      type: object\n      required:\n        - name\n        - specification\n      properties:\n        name:\n          type: string\n          description: Service's name\n        specification:\n          type: string\n          description: Specification file data\n        servers:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/Server'\n        metadata:\n          type: object\n          description: Optional metadata linked to the service\n    Server:\n      type: object\n      required:\n        - address\n        - port\n        - useTls\n      properties:\n        address:\n          type: string\n        port:\n          type: integer\n        useTls:\n          type: boolean\n")))}l.isMDXComponent=!0}}]);